---
- ansible.builtin.assert:
    that:
      - httpd is defined
      - httpd.home is defined
    quiet: true

- ansible.builtin.set_fact:
    ssl_conf: "{{ httpd.home }}/httpd/conf.d/ssl.conf"

- ansible.builtin.set_fact:
    ssl_conf_disabled: "{{ ssl_conf }}.disabled"

- ansible.builtin.stat:
    path: "{{ ssl_conf }}"
  register: ssl_conf_file

- block:
    - ansible.builtin.stat:
        path: "{{ ssl_conf_disabled }}"
      register: ssl_conf_disabled_file

    - name: "Disabled SSL"
      ansible.builtin.file:
        src: "{{ ssl_conf }}"
        path: "{{ ssl_conf }}.disabled"
        state: hard
      when:
        - ssl_conf_file.stat.exists
        - not ssl_conf_disabled_file.stat.exists

    - ansible.builtin.stat:
        path: "{{ ssl_conf }}.disabled"
      register: ssl_conf_remove

    - name: "Remove old file"
      ansible.builtin.file:
        path: "{{ ssl_conf }}"
        state: absent
      when:
        - ssl_conf_remove.stat.exists
  when:
    - not httpd_ssl is defined

- block:
    - name: "Ensures HTTPd SSL configuration is deployed"
      ansible.builtin.template:
        src: templates/ssl.conf.j2
        dest: "{{ ssl_conf }}"
        owner: "{{ httpd.user.name }}"
        group: "{{ httpd.group.name }}"
        mode: 0640
      notify:
        - Restart JBCS

    - ansible.builtin.stat:
        path: "{{ ssl_conf_disabled }}"
      register: is_ssl_conf_disabled

    - name: "Remove disabled conf if exists"
      ansible.builtin.file:
        path: "{{ ssl_conf_disabled }}"
        state: absent
      when:
        - is_ssl_conf_disabled.stat.exists
  when:
    - httpd_ssl is defined
